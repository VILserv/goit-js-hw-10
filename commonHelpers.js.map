{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst userDate = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nlet selectedDate;\nbutton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      button.disabled = true;\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        color: '#EF4040',\n      });\n    } else {\n      button.disabled = false;\n      selectedDate = selectedDates[0].getTime();\n    }\n  },\n};\n\nconst dataPicker = flatpickr(userDate, options);\n\nbutton.addEventListener('click', () => {\n  let countdownInterval = setInterval(() => {\n    let different = selectedDate - new Date().getTime();\n    let time = convertMs(different);\n\n    daysElement.textContent = `${addLeadingZero(time.days)}`;\n    hoursElement.textContent = `${addLeadingZero(time.hours)}`;\n    minutesElement.textContent = `${addLeadingZero(time.minutes)}`;\n    secondsElement.textContent = `${addLeadingZero(time.seconds)}`;\n\n    different -= 1000;\n\n    if (different <= 0) {\n      clearInterval(countdownInterval);\n      button.disabled = false;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n"],"names":["userDate","button","daysElement","hoursElement","minutesElement","secondsElement","selectedDate","options","selectedDates","iziToast","flatpickr","countdownInterval","different","time","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EACJL,EAAO,SAAW,GAElB,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAK,IAAI,MACzBP,EAAO,SAAW,GAClBQ,EAAS,KAAK,CACZ,QAAS,qCACT,SAAU,WACV,MAAO,SACf,CAAO,IAEDR,EAAO,SAAW,GAClBK,EAAeE,EAAc,GAAG,QAAO,EAE1C,CACH,EAEmBE,EAAUV,EAAUO,CAAO,EAE9CN,EAAO,iBAAiB,QAAS,IAAM,CACrC,IAAIU,EAAoB,YAAY,IAAM,CACxC,IAAIC,EAAYN,EAAe,IAAI,KAAM,EAAC,QAAO,EAC7CO,EAAOC,EAAUF,CAAS,EAE9BV,EAAY,YAAc,GAAGa,EAAeF,EAAK,IAAI,IACrDV,EAAa,YAAc,GAAGY,EAAeF,EAAK,KAAK,IACvDT,EAAe,YAAc,GAAGW,EAAeF,EAAK,OAAO,IAC3DR,EAAe,YAAc,GAAGU,EAAeF,EAAK,OAAO,IAE3DD,GAAa,IAETA,GAAa,IACf,cAAcD,CAAiB,EAC/BV,EAAO,SAAW,GAErB,EAAE,GAAI,CACT,CAAC,EAED,SAASa,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}